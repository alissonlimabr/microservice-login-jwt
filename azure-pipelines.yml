# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  - main

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '6a37aff5-02b0-4c81-b4bf-298c67a924e1'
  imageRepository: 'microserviceazure'
  defaultWorkingDirectory: 'microserviceazure'
  containerRegistry: 'alissonlimadev.azurecr.io'
  dockerfilePath:  '$(defaultWorkingDirectory)/Dockerfile'
  tag: 'latest'
  imagePullSecret: 'alissonlimadev28451177-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
          - publish: $(defaultWorkingDirectory)/k8s/spring
            artifact: k8s


  - stage: DeployDev
    displayName: Deploy Dev
    dependsOn: Build

    jobs:
      - deployment: Deploy
        displayName: Deploy
        pool:
          vmImage: $(vmImageName)
        environment: 'microserviceazure.dev'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    secretName: $(imagePullSecret)
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)


                - task: KubernetesManifest@1
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: 'deploy'
                    namespace: 'dev'
                    manifests: |
                      $(defaultWorkingDirectory)/k8s/spring/deployment.yaml
                    imagePullSecrets: |
                      $(imagePullSecret)
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)

  - stage: DeployProd
    displayName: Deploy Prod
    dependsOn: DeployDev
    condition: succeeded()

    jobs:
      - deployment: Deploy
        displayName: Deploy
        pool:
          vmImage: $(vmImageName)
        environment: 'microserviceazure.prod'
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: self
                - task: KubernetesManifest@0
                  displayName: Create imagePullSecret
                  inputs:
                    action: createSecret
                    secretName: $(imagePullSecret)
                    dockerRegistryEndpoint: $(dockerRegistryServiceConnection)


                - task: KubernetesManifest@1
                  displayName: Deploy to Kubernetes cluster
                  inputs:
                    action: 'deploy'
                    namespace: 'prod'
                    manifests: |
                      $(defaultWorkingDirectory)/k8s/spring/deployment.yaml
                    imagePullSecrets: |
                      $(imagePullSecret)
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)

                - task: KubernetesManifest@1
                  displayName: Deploy LoadBalancer Service to Kubernetes cluster
                  inputs:
                    action: 'deploy'
                    namespace: 'prod'
                    manifests: |
                      $(defaultWorkingDirectory)/k8s/spring/loadbalancer.yaml
                    containers: |
                      $(containerRegistry)/$(imageRepository):$(tag)